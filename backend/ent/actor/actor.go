// Code generated by ent, DO NOT EDIT.

package actor

const (
	// Label holds the string label denoting the actor type in the database.
	Label = "actor"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldCharacterName holds the string denoting the character_name field in the database.
	FieldCharacterName = "character_name"
	// FieldImage holds the string denoting the image field in the database.
	FieldImage = "image"
	// FieldMovieID holds the string denoting the movie_id field in the database.
	FieldMovieID = "movie_id"
	// EdgeActors holds the string denoting the actors edge name in mutations.
	EdgeActors = "actors"
	// Table holds the table name of the actor in the database.
	Table = "actors"
	// ActorsTable is the table that holds the actors relation/edge. The primary key declared below.
	ActorsTable = "actor_actors"
	// ActorsInverseTable is the table name for the Movie entity.
	// It exists in this package in order to avoid circular dependency with the "movie" package.
	ActorsInverseTable = "movies"
)

// Columns holds all SQL columns for actor fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldCharacterName,
	FieldImage,
	FieldMovieID,
}

var (
	// ActorsPrimaryKey and ActorsColumn2 are the table columns denoting the
	// primary key for the actors relation (M2M).
	ActorsPrimaryKey = []string{"actor_id", "movie_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
